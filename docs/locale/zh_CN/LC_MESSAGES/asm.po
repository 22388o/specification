# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, sCrypt Inc
# This file is distributed under the same license as the sCrypt package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# qtom zheng <zhfnjust@qq.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: sCrypt\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-08 12:13+0800\n"
"PO-Revision-Date: 2021-10-07 14:25+0000\n"
"Last-Translator: qtom zheng <zhfnjust@qq.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/scrypt-1/teams/121283/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../asm.rst:3 8cec999ca56a4635b0eb895d28292f1f
msgid "Inline Assembly"
msgstr "内联汇编"

#: ../../asm.rst:4 d611070155fc4a2eb449204dfbac9c9f
msgid ""
"Script is a low-level language and acts as assembly for the `Bitcoin Virtual"
" Machine <https://medium.com/@xiaohuiliu/introduction-to-bitcoin-smart-"
"contracts-9c0ea37dc757>`_. Usually, developers do not have to deal with it "
"directly and can use high-level languages like sCrypt. However, there are "
"cases where using Script is desirable. For example, customized script is "
"optimized and thus more efficient than script generated by sCrypt. Or script"
" is generated using external tools (like `MiniForth "
"<https://powping.com/posts/95e53a7305ad9d333d072575946d0cfd0d6321f40af40f9c66c70955ada94e58>`_)"
" and needs to be integrated into sCrypt."
msgstr ""
"脚本是一种低级语言，可以看作是 `比特币虚拟机 <https://medium.com/@xiaohuiliu/introduction-to-"
"bitcoin-smart-contracts-9c0ea37dc757>`_ "
"的汇编语言。通常，开发人员不用直接使用它，而是用像sCrypt这样的高级语言。但有些情况下用脚本语言更合适。例如，直接写出更优化的脚本，比用sCrypt生成的更高效。或者脚本是用外部工具（如`MiniForth"
" "
"<https://powping.com/posts/95e53a7305ad9d333d072575946d0cfd0d6321f40af40f9c66c70955ada94e58>`_）生成的，需要集成到sCrypt中。"

#: ../../asm.rst:9 ccbc29af4fa54a85a87ccf41eadd9e3c
msgid ""
"Script can be embedded directly into sCrypt source code using assembly "
"representation. An sCrypt function can be written in Script and called like "
"a regular sCrypt function."
msgstr "用汇编表示法可以直接把脚本嵌入到sCrypt源代码中。可以用脚本编写sCrypt函数，并像正常的sCrypt函数一样被调用。"

#: ../../asm.rst:12 5a837f80da9a4d20838780a6ef9bde42
msgid "Calling Convention"
msgstr "调用约定"

#: ../../asm.rst:13 7c8aa8585ec34302b28dc054d37d1e62
msgid ""
"For a function to be written in Script, its entire body must be enclosed by "
"``asm`` mode. Function parameters are on top of the stack, in reverse order "
"as declared. For example, for a function with signature ``function foo(int "
"p0, bytes p1, bool p2): int``, ``p2`` will be top of the stack, ``p1`` "
"second from top, and ``p0`` third from top when entering ``asm`` mode. When "
"exiting ``asm`` mode, the return value is on top of the stack. All other "
"items in the stack before the call must remain intact."
msgstr ""
"对于用脚本编写的函数，它的整个函数主体必须用 ``asm`` 块包围。函数参数位于栈顶，与声明的顺序相反。例如，对于签名为 ``function "
"foo(int p0, bytes p1, bool p2) : int`` 的函数，``p2`` 位于栈顶，``p1`` 是从栈顶倒数第二个，而 ` "
"`p0`` 进入 `asm` 是第三个。当退出 ``asm`` 模式时，需要弹出栈里的所有参数，并把返回值放到栈顶。栈里其他元素保持不变。"

#: ../../asm.rst:18 a3377dc437464863b24295569c54aee5
msgid "Three assembly functions are shown below."
msgstr "三个汇编函数如下所示。"

#: ../../asm.rst:46 2eb9d8b1ca464ebaa86430596ba74c3a
msgid "Assembly Variable"
msgstr "汇编变量"

#: ../../asm.rst:47 2d0daac188d346a4992c62a6c88c435d
msgid ""
"Variables can be used inside ``asm`` mode by prefix ``$``. Unlike the rest "
"of Script, which is copied verbatim into the final script output, a variable"
" is prefixed by its scope to avoid name collision, uniquely identified by "
"the function and contract it is within. For example, supposed a variable "
"``$var`` is used inside function ``func`` inside contract ``contractFoo``, "
"it will show up in the final script output as ``$contractFoo.func.var``."
msgstr ""
"变量可以通过前缀 ``$`` 在 ``asm`` "
"模式中使用。与脚本的其余部分不同，它被完整复制到最终脚本输出中，变量以其作用域为前缀以避免名称冲突，由它所在的函数和契约唯一标识。例如，假设在合约 "
"``contractFoo`` 内的函数 ``func`` 中使用了一个变量 ``$var``，它将在最终的脚本输出中显示为 "
"``$contractFoo.func.var``。"

#: ../../asm.rst:51 feec015146dd4f04b55d609764cb356b
msgid "An example is shown below."
msgstr "一个例子如下所示。"

#: ../../asm.rst:66 de6620e85f1f4a28be9d2b1d0939d2bd
msgid "Notes"
msgstr "注意"

#: ../../asm.rst:67 f6bffe6381634a86a196ba99f7344b6c
msgid ""
"Inline assembly bypasses many features of sCrypt such as type checking. "
"Extreme caution has to be taken using this advanced feature. Also it is "
"case-insensitive for compatibility with external tools."
msgstr "内联汇编绕过了 sCrypt 的许多功能，例如类型检查。使用此高级功能时必须格外小心。此外，为了与外部工具兼容，它不区分大小写。"
